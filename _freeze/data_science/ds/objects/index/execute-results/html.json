{
  "hash": "b5f66b3ad224f5d2586fc87f2af9d9d8",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: '{{< animate fadeInDown \"Bias in AI: detection and mitigation\"delay=.6s >}}'\nsubtitle: '{{< animate fadeInDown \"Enable users to detect and mitigate bias, using the example of the COMPAS Recidivism Risk Score Data and Analysis Dataset. Users will be equiped with concrete strategies to first detect, and secondly mitigate bias\"delay=.6s >}}'\nauthor:\n  - Jorge Roa\n  - Carlo Greß\n  - Hannah Schweren\ndate: '2023-12-05'\ncategories:\n  - Advanced\n  - Bias in AI\n  - Mitigation\ntoc: true\ndraft: false\ncode-link: true\ncode-copy: true\ntitle-block-banner: true\ncomments: false\nimage: images/dalle.png\ninclude-in-header: meta.html\nformat: html\nfilters:\n  - lightbox\n  - webr\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: left\n  css-class: lightwidth\nwebr:\n  packages:\n    - ggplot2\n    - dplyr\n  show-startup-message: false\n  show-header-message: false\n---\n\n<br>\n\n# Introduction\n\nThis notebook offers a detailed guide that includes both code and explanations aimed at enabling users to identify and counteract bias within data, specifically using the COMPAS Recidivism Risk Score Data and Analysis Dataset as a case study. It provides users with practical strategies to first detect and then mitigate bias, laying a foundational approach for handling biases effectively in algorithmic processes. The tutorial is designed as an introductory step towards fostering an understanding of the biases that can infiltrate algorithms and promoting the development of ethical AI practices. This is particularly critical in contexts where algorithmic decisions intersect with policy-making, potentially influencing societal outcomes. Through this guide, users will not only learn to recognize biases but also implement measures to address these biases, thereby enhancing the fairness and integrity of AI systems in public and private sectors.\n\n<br>\n\n# Overview\n\nThe COMPAS dataset, used by an algorithm predicting recidivism risk, has become a key example in the study of algorithmic bias and fairness. It includes demographic and criminal history data. Analyses revealed racial disparities in risk assessments, with the algorithm tending to overestimate recidivism risk for Black defendants and underestimate it for White defendants.\n\nThis tutorial is divided into three parts:\n\n1.- *Introduction to Bias Detection Metrics*: We will introduce different metrics to detect bias, providing a smooth introduction to the topic and helping users gain a better understanding of the issue.\n\n2.- *Replication of Biased Output with a Feed Forward Neural Network*: In this step, we will replicate the biased output using a Feed Forward Neural Network. This hands-on exercise will provide users with practical experience in generating predictions and raise awarness for the biased output.\n\n3.*-Mitigation of Detected Bias*: The grand finale and most important part of our tutorial! Users will learn effective strategies to mitigate the detected bias. This step is crucial for ethical deep learning, and the tutorial aims to equip users with essential skills dealing with biased results.\n\nBy completing this tutorial, users will acquire valuable skills for future data endeavors. It serves as a foundational step to train users and raise awareness of fairness issues in Deep Learning. \n\n<br>\n\n\n## Background and Prerequisites\n\nThis tutorial is designed for users with a basic understanding of Python and Deep Learning. Users should have a foundational understanding of key concepts in machine learning and neural networks. Familiarity with Python is essential. Additionally, a grasp of linear algebra and calculus will be beneficial for understanding the mathematical underpinnings of deep learning algorithms.\n\n- A solid understanding of model training is crucial, as well as knowledge of common machine learning libraries such as   `Keras` and `scikit-learn`. Users should also be aware of the ethical and policy considerations surrounding machine learning applications, particularly in relation to bias and fairness.\n\n- Lastly, a conceptual understanding of how neural networks operate, including layers, activation functions, and backpropagation, will enhance the learning experience of the user. Overall, a basic background in machine learning fundamentals will help users to engage more effectively with our tutorial.\n\n::: {#e8f74e80 .cell message='false' execution_count=1}\n``` {.python .cell-code}\n!pip install pandas numpy matplotlib\n!pip install Aequitas\n!pip install keras_tuner\n!pip install aif360\n!pip install BlackBoxAuditing\n!pip install tensorflow\n```\n:::\n\n\n::: {#d122342b .cell message='false' execution_count=2}\n``` {.python .cell-code}\n# Data visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style=\"white\", palette=\"muted\", color_codes=True, context=\"talk\")\nfrom IPython import display\n\n# Data manipulation\nimport pandas as pd\nimport numpy as np\nfrom tqdm import tqdm\n\n# Aequitas library used to audit models for discrimination and bias\nfrom aequitas.group import Group\nfrom aequitas.bias import Bias\nfrom aequitas.fairness import Fairness\nfrom aequitas.plotting import Plot\nimport matplotlib.pyplot as plt\nimport warnings; warnings.simplefilter('ignore')\n\n# Machine and deep learning libraries\nimport tensorflow as tf\nfrom keras.layers import Input, Dense, Dropout\nfrom keras.models import Model\nfrom keras.optimizers import Adam\nimport keras_tuner as kt\nfrom keras import Input, Model\nfrom keras.layers import Dense, Dropout\nfrom keras.optimizers import Adam\nfrom sklearn.utils.class_weight import compute_class_weight\nfrom sklearn.metrics import accuracy_score, roc_auc_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import precision_score, recall_score, f1_score, confusion_matrix\n\n# AI fairness library\nfrom aif360.algorithms.preprocessing import DisparateImpactRemover\nfrom aif360.datasets import StandardDataset as Dataset\nfrom aif360.metrics import BinaryLabelDatasetMetric\nfrom aif360.algorithms.postprocessing.reject_option_classification import RejectOptionClassification\nfrom aif360.algorithms.preprocessing.reweighing import Reweighing\nfrom collections import OrderedDict\nfrom aif360.metrics import ClassificationMetric\n```\n:::\n\n\n# Data Description\n\nIn this tutorial we are working with the COMPAS Recidivism Risk Score Data and Analysis (Source: Pro Publica, https://www.propublica.org/datastore/dataset/compas-recidivism-risk-score-data-and-analysis) This dataset is a classical example for bias in machine learning. We specifically liked using this dataset as an example because it reveils the possible harmfull negative impact on real world decisions, that algorithms can have and the resulting policy responsibility.\n\nThe tabular dataset is used in U.S. court proceedings to evaluate the probability of a defendant reoffending. It is available in csv format for free and contains the following information (Source: https://mlr3fairness.mlr-org.com/reference/compas.html#pre-processing) :\n\n* (integer) age : The age of defendants.\n\n* (factor) c_charge_degree : The charge degree of defendants. F: Felony M: Misdemeanor\n\n* (factor) race: The race of defendants.\n\n* (factor) age_cat: The age category of defendants.\n\n* (factor) score_text: The score category of defendants.\n\n* (factor) sex: The sex of defendants.\n\n* (integer) priors_count: The prior criminal records of defendants.\n\n* (integer) days_b_screening_arrest: The count of days between screening date and (original) arrest date. If they are too far apart, that may indicate an error. If the value is negative, that indicate the screening date happened before the arrest date.\n\n* (integer) decile_score: Indicate the risk of recidivism (Min=1, Max=10)\n\n* (integer) is_recid: Binary variable indicate whether defendant is rearrested at any time.\n\n* (factor) two_year_recid: Binary variable indicate whether defendant is rearrested at within two years.\n\n* (numeric) length_of_stay: The count of days stay in jail.\n\nIn the course of the tutorial, we'll also work with a version of the COMPAS data, that was processed to work well with the aequitas package - this version of the dataset can be found in this Github repository: https://github.com/dssg/aequitas/tree/master/examples/data. Here, only a subset of the variables is considered, but it includes all important variables for demonstrating the package's benefits. It includes:\n\n* (integer) entity_id: ID variable\n\n* (integer) score: Risk score of defendants, binary\n\n* (factor) label_value: Binary variable indicate whether defendant is rearrested\n\n* (factor) race: The race of defendants.\n\n* (factor) sex: The sex of defendants\n\n* (factor) age_cat: The age category of defendants\n\n\n\n\n\n------------------------------------------------------------------------\n\n# References\n\n------------------------------------------------------------------------\n\n\n::: {.callout-tip}\n## References\n\n- Regean, Mary. 2021. \"Understanding bias and fairness in AI system\". [URL](https://towardsdatascience.com/understanding-bias-and-fairness-in-aisystems-6f7fbfe267f3)\n\n- Anaconda, 2021 State of Data Science Report. [URL](https://know.anaconda.com/rs/387-XNW-688/images/Anaconda-2021-SODS-Report-Final.pdf)\n\n- Clark, Andrew. September 19, 2022. \"Top bias metrics and how they work\". Monitaur. [URL](https://www.monitaur.ai/blog-posts/top-bias-metricsand-how-they-work)\n\n- Feldman et al. „Certifying and Removing Disparate Impact“. Proceedings of the 21th ACM SIGKDD International Conference on KnowledgeDiscovery and Data Mining, ACM, 2015, S. 259–68. DOI.org (Crossref), [URL](https://doi.org/10.1145/2783258.2783311).\n\n- Towards datascience, \"AI Fairness — Explanation of Disparate Impact Remover\". [URL](https://towardsdatascience.com/ai-fairness-explanation-of-disparate-impact-remover-ce0da59451f1)\n\n- Lee, Nicol Turner, Paul Resnick, and Genie Barton. \"Algorithmic bias detection and mitigation: Best practices and policies to reduce consumer harms.\" Brookings Institute: Washington, DC, USA 2 (2019)\n:::\n\n::: callout-note\nCite this page: Roa, J. (2023, April 16). *Understanding R Objects: Data Structures and Classes in R*. /. [URL](https://www.hertiecodingclub.com/learn/rstudio/rstudio101/)\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}