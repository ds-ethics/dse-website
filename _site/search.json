[
  {
    "objectID": "learn/I2DS/i2ds2021/index.html",
    "href": "learn/I2DS/i2ds2021/index.html",
    "title": "I2DS Tools for Data Science Workshop 2021",
    "section": "",
    "text": "The Introduction to Data Science (IDS) course at the Hertie School in Berlin, Germany, is designed to provide students with a comprehensive understanding of data science principles, techniques, and tools. As part of the course curriculum, students actively engage in organizing workshops and activities to enhance their practical skills and share their knowledge with others.\n \nThese student-led activities, such as the workshop on Tools for Data Science with R, serve as valuable opportunities for participants to gain hands-on experience and learn directly from their peers. The I2DS course encourages students to take the lead in organizing and delivering these workshops, fostering a collaborative learning environment.\n\n\n\n Go to I2DS Tools 2021"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html",
    "href": "learn/rstudio/stata_to_r/index.html",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "",
    "text": "Who doesn’t remember their first love? In my case, in the coding world, my first love was Stata. I clearly remember my first job as a research assistant to Laura Atuesta. Learning Stata implied an important learning curve since this language was used in my university for my classes, my work, and research. I did my bachelor’s thesis with Stata, and, being honest, I just have great memories using Stata because it was the first time that I’ve feel capable of doing multiple things. There my curiosity for data science and coding started. However, like any other Story love (that may be doesn’t end well), I met R. I would say with this language my interest and passion for coding exploded. Since then, I stopped using Stata and fall in love completely for R. Syntaxis, open-source building community and the approach that you can have with this language are just one of the multiple reasons why I decided to keep learning with R. It doesn’t matter what happens, Stata will be always in the bottom of my heart and my first love since it was the first coding language that I learned.\nBecause of this and because I know that different people and scholars are using Stata and they are curious about what R offers, here is an essential guide of commands for doing some data wrangling, analysis, and running some models. Of course, I don’t cover plenty of things, but this is just to show the differences between using R and Stata. I’m sorry if I don’t use the new Stata approaches since I learned the version 11º or 12º and now the are in the 17º version, however, the commands still can be useful.\nWe are going to work a lot with the dplyrpackage. You need to load the package just once when you open your environment. If you have any question, please check our other material to start learning R. However, the best way to learn is try different approaches (;"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#csv-files",
    "href": "learn/rstudio/stata_to_r/index.html#csv-files",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "CSV Files",
    "text": "CSV Files\n\n\n\n\n\n\n/*Import csv file*/\nimport delimited \"my_data.csv\", clear\n\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(readr)\n\n#Use read_csv2\ndf_data &lt;- read_csv2(\"data.csv\")\n\n#Using read.table function with comma separator\ndf_data &lt;- read.table(\"my_data.csv\", \n                      sep = \",\", \n                      header = TRUE)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#excel-files",
    "href": "learn/rstudio/stata_to_r/index.html#excel-files",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Excel Files",
    "text": "Excel Files\n\n\n\n\n\n\n/*Import excel file*/\nimport excel \"df_data.xlsx\", \nsheet(\"Sheet1\") firstrow clear\n\n\n\n\n\n\n\n\n\n\n\n#With readxl package\nlibrary(readxl)\ndf_data &lt;- read_excel(\"my_data.xlsx\", \n                      sheet = \"Sheet1\")\n\n#With openxlsx package\nlibrary(openxlsx)\ndf_data &lt;- read.xlsx(\"my_data.xlsx\", \n                     sheet = \"Sheet1\")"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#stata-files-.dta",
    "href": "learn/rstudio/stata_to_r/index.html#stata-files-.dta",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Stata Files (.dta)",
    "text": "Stata Files (.dta)\n\n\n\n\n\n\n/*Import excel file*/\nuse \"df_data.dta\", clear\n\n\n\n\n\n\n\n\n\n\n\n#Load the package\nlibrary(haven)            \n\ndf_data &lt;- read_dta(\"df_data.dta\")"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#missing-data",
    "href": "learn/rstudio/stata_to_r/index.html#missing-data",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Missing Data",
    "text": "Missing Data\n\n\n\n\n\n\n/* Provides the structure of the dataset */\nmissing variable1 variable2 variable3\n\n\n\n\n\n\n\n\n\n\n\n\n#Check missing data for our entire database\nis.na(df_data)\n\n#Check missing data for our entire database\nis.na(df_data$variable1)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#rename-variables",
    "href": "learn/rstudio/stata_to_r/index.html#rename-variables",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Rename variables",
    "text": "Rename variables\n\n\n\n\n\n\n/* How to rename */\nrename oldname newname\n\nrename lastname lastname2\nrename firstname firstname2\nrename studentstatus studentstatus2\nrename averagescoregrade avgscore\n\n\n\n\n\n\n\n\n\n\n\n\n#Rename the variables of our data\nnames(df_data) &lt;- c(\"newvar1\", \"newvar2\")\n\n#With the dplyr package\n\nlibrary(dplyr)\ndf_data_final &lt;- rename(df_data, \n                        newvar1 = var1, \n                        newvar2 = var2)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#label-variables",
    "href": "learn/rstudio/stata_to_r/index.html#label-variables",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Label variables",
    "text": "Label variables\n\n\n\n\n\n\nlabel variable w \"Weight\"\nlabel variable y \"Output\"\nlabel variable x1 \"Predictor 1\"\nlabel variable x2 \"Predictor 2\"\nlabel variable age \"Age\"\nlabel variable sex \"Gender\"\n\n\n\n\n\n\n\n\n\n\n\n#Load labelled package\nlibrary(labelled)\n\n#Define the value labels for the codes\nlabels &lt;- c(\"Option 1\", \"Option 2\", \n            \"Option 3\", \"Option 4\", \n            \"Option 5\")\ndf_data$code &lt;- labelled(df_data$code, \n                         labels = labels)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#value-labels",
    "href": "learn/rstudio/stata_to_r/index.html#value-labels",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Value labels",
    "text": "Value labels\n\n\n\n\n\n\n/* Value labels for the codes */\nlabel define label1 1 \"Option 1\" \n2 \"Option 2\" 3 \"Option 3\" 4 \"Option 4\" \n5 \"Option 5\"\n\n/* Assign the value labels to the codes */\nlabel values code label1\n\n\n\n\n\n\n\n\n\n\n\n#Load labelled package\nlibrary(labelled)\n\n#Define the value labels for the codes\nlabels &lt;- c(\"Option 1\", \"Option 2\", \n            \"Option 3\", \"Option 4\", \n            \"Option 5\")\ndf_data$code &lt;- labelled(df_data$code, \n                         labels = labels)\n\n\n#Define the value labels for the codes\nlabels &lt;- c(\"Option 1\", \"Option 2\", \n            \"Option 3\", \"Option 4\", \n            \"Option 5\")\ndf_data$code &lt;- factor(df_data$code, \n                       levels = 1:5, \n                       labels = labels)\n\nIn this approach, you can assign values to numeric or character variables"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#group-variables",
    "href": "learn/rstudio/stata_to_r/index.html#group-variables",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Group variables",
    "text": "Group variables\n\n\n\n\n\n\n/* Value labels for the codes */\ncollapse (mean) var1, by(var2, var3)\n\nlist var2 var3 var1\n\n\n\n\n\n\n\n\n\n\n\n#Load dplyr package\nlibrary(dplyr)\n\n#We group the data by variables 2 and 3, \n#calculate the mean of variable 1\ndf_data_group &lt;- df_data %&gt;%\n  group_by(var2, var3) %&gt;%\n  summarise(mean_var1 = mean(var1))"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#merge-two-datasets",
    "href": "learn/rstudio/stata_to_r/index.html#merge-two-datasets",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Merge two datasets",
    "text": "Merge two datasets\n\n\n\n\n\n\n/* Exact match on the key variable(s). */\nuse dataset1.dta, clear\nmerge 1:1 id using dataset2.dta\n/* Each observation in the first dataset */\nmerge 1:m id using dataset2.dta\n/* Each observation in the second dataset */\nmerge m:1 id using dataset2.dta\n/* Each observation many-to-many merge */\nmerge m:1 id using dataset2.dta\nRemember that we need to have our data1 in the same path\n\n\n\n\n\n\n\n\n\n\n\n#Load dplyr package\nlibrary(dplyr)\n\n#1:1 using inner join\ndf_merged_inner &lt;- inner_join(df_1, df_1, \n                              by = \"id1\")\n\n#1:m using left join\ndf_merged_left &lt;- left_join(df_1, df_1, \n                            by = \"id1\")\n\n#m:1 using right join\ndf_merged_right &lt;- right_join(df_1, df_1, \n                              by = \"id1\")\n\n#m:m using full join\ndf_merged_full &lt;- full_join(df_1, df_1, \n                            by = c(\"id1\", \n                                   \"id2\"))\n#You can merge with more tha one variable"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#create-sequenceids",
    "href": "learn/rstudio/stata_to_r/index.html#create-sequenceids",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Create sequence/ids",
    "text": "Create sequence/ids\n\n\n\n\n\n\n/* Sequence of numbers from 1 to n */\ngen seq = _n\n\n/* Sequence with the total number of \nobservations */\n\ngen total_seq = _N\n\n\n\n\n\n\n\n\n\n\n\nv_seq &lt;- seq(from = 1, to = 10, by = 1)\n\n#Load dplyr package\nlibrary(dplyr)\n\ndf_final &lt;- df %&gt;%\n  mutate(id = 1:n())"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#drop-variables",
    "href": "learn/rstudio/stata_to_r/index.html#drop-variables",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Drop variables",
    "text": "Drop variables\n\n\n\n\n\n\n/* Drop variable */\ndrop var1 var2\n\n/* Drop all variable and keep */\ndrop _all\nkeep var1 var2 var3\n\n\n\n\n\n\n\n\n\n\n\n#Load dplyr package\nlibrary(dplyr)\n\n#Drop some variables\ndf_new_data &lt;- df_old %&gt;% select(-var1, -var2)\n\n#Keep specific variables\ndf_new_data &lt;- df_old %&gt;% select(var1, var2)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#summary",
    "href": "learn/rstudio/stata_to_r/index.html#summary",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Summary",
    "text": "Summary\n\n\n\n\n\n\n/* Summary of variables of interest*/\nsummarize var1 var2 var3\n\n\n\n\n\n\n\n\n\n\n\n\n#Summary for entire data\nsummary(dataset)\n\n#Summary for a variable\nsummary(dataset$variable)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#linear-model",
    "href": "learn/rstudio/stata_to_r/index.html#linear-model",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Linear Model",
    "text": "Linear Model\n\n\n\n\n\n\n/* Fit a linear model */\nregress mpg weight length foreign\n\n/* Print summary */\nestimates table\n\n\n\n\n\n\n\n\n\n\n\n#Fit a linear model\nmodel_lm &lt;- lm(mpg ~ wt + qsec + vs, \n               data = df_my_data)\n\n#Print summary\nsummary(model_lm)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#logistic-model",
    "href": "learn/rstudio/stata_to_r/index.html#logistic-model",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Logistic Model",
    "text": "Logistic Model\n\n\n\n\n\n\n/* Fit a logistic regression model */\nlogit foreign weight length\n\n/* Print summary */\nestimates table\n\n\n\n\n\n\n\n\n\n\n\n#Fit a logistic regression model\nmodel_log &lt;- glm(vs ~ wt + qsec, \n                 data = df_my_data, \n                 family = binomial())\n\n#Print summary\nsummary(model)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#poisson-model",
    "href": "learn/rstudio/stata_to_r/index.html#poisson-model",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Poisson Model",
    "text": "Poisson Model\n\n\n\n\n\n\n/* Fit a Poisson regression model */\npoisson accidents weight length foreign\n\n/* Print summary */\nestimates table\n\n\n\n\n\n\n\n\n\n\n\n#Fit a Poisson regression model\nmodel_poiss &lt;- glm(am ~ wt + hp, \n                   data = df_my_data, \n                   family = poisson())\n\n#Print summary\nsummary(model)"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#scatter-plot",
    "href": "learn/rstudio/stata_to_r/index.html#scatter-plot",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Scatter plot",
    "text": "Scatter plot\n\n\n\n\n\n\n/* Create scatter plot */\nscatter price mpg\n\n\n\n\n\n\n\n\n\n\n\n# Load data and ggplot2\nlibrary(ggplot2)\ndata(df_my_data)\n\n#Create scatter plot\nggplot(df_my_data, aes(x = mpg, y = wt)) + \n  geom_point() + #Here is the scatter\n  xlab(\"Miles per gallon\") +\n  ylab(\"Weight\")"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#line-plot",
    "href": "learn/rstudio/stata_to_r/index.html#line-plot",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Line plot",
    "text": "Line plot\n\n\n\n\n\n\n/* Create Line plot */\ntwoway line le_w le_y, xlabel(1950(10)2010)\n\n\n\n\n\n\n\n\n\n\n\n# Load data and ggplot2\nlibrary(ggplot2)\ndata(df_my_data)\n\n#Create line plot\nggplot(df_my_data, aes(x = year, y = pop)) + \n  geom_line() + #Here is the line\n  xlab(\"Year\") +\n  ylab(\"Population\")"
  },
  {
    "objectID": "learn/rstudio/stata_to_r/index.html#bar-plot",
    "href": "learn/rstudio/stata_to_r/index.html#bar-plot",
    "title": "Making the Transition? A Guide for switching from Stata to R",
    "section": "Bar plot",
    "text": "Bar plot\n\n\n\n\n\n\n/* Create a Bar plot */\ngraph bar (count) rep78, over(foreign)\n\n\n\n\n\n\n\n\n\n\n\n# Load data and ggplot2\nlibrary(ggplot2)\ndata(df_my_data)\n\n#Create bar chart\nggplot(data = df_my_data, \n       aes(x = factor(cyl))) +\n  geom_bar() + #Here is the bar\n  xlab(\"Number of cylinders\") +\n  ylab(\"Count\")\n\n\n\n \nI also want to provide a good cheat sheet that contains more information about the differences between Stata and R."
  },
  {
    "objectID": "learn/rstudio/objects/index.html",
    "href": "learn/rstudio/objects/index.html",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "",
    "text": "One of the things that define R as an amazing tool to do multiple things are objects. R work with objects that essentialy are data structures that can hold values, but also othr types of data and can be assigned names for easy reference. Objects in R are useful because we can organize and store data in meaningful ways. One of the most importants thigns when you are learning R is understand how to work with these objects because you will have the confidence and knowledge to use it at your better convenience. There are several types of objects in R, including vectors, matrices, data frames, lists, and factors, each with their own characteristics and uses.\n\n\n\n\n\n\nAssign objects\n\n\n\n\nTo create an object, give it a name followed by the assignment operator, followed by the value/data type.\nAssignment operator &lt;-\nShortcut: “Alt + -” on PC, “Option + -” on Mac\n\n\n\n\n\n\n\n\n\nExecute R code in the website\n\n\n\n\nYou can execute R code within our website!!\nYou can install plots with this code webr::install(\"ggplot2\"). However, it may take 2 minutes to run.\nYou can check in this link which packages are available and datasets\n\n\n\n \n\n\n\n\n \nIn this image, you can see the different types of objects that we have and this is the best way to visualize. However, to really understand what is going on, you need to start writing code and start trying using this different type of objects to know them better. In the next lines, I’ll write explanations, examples and exercises."
  },
  {
    "objectID": "learn/rstudio/objects/index.html#numeric-values",
    "href": "learn/rstudio/objects/index.html#numeric-values",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Numeric values",
    "text": "Numeric values\nA numeric object can be stored as a number.\n\nx &lt;- 6\n\nclass(x)\n\n[1] \"numeric\"\n\nx\n\n[1] 6"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#character-values",
    "href": "learn/rstudio/objects/index.html#character-values",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Character values",
    "text": "Character values\nStores a sequence of characters, such as letters, numbers, and symbols. A character value is created by enclosing the sequence of characters within quotation marks, either single or double.\n\ncharacter &lt;- \"Welcome to the Hertie Coding Club\"   # creating a character value\n\nCharacter values can be combined using the paste() or paste0() functions, which concatenate two or more character values into a single character value.\n\nx &lt;- \"Welcome to\"\ny &lt;- \"the Hertie Coding Club\"\nz &lt;- paste(x, y, sep = \": \")\n\n\nclass(z)\n\n[1] \"character\"\n\nz\n\n[1] \"Welcome to: the Hertie Coding Club\""
  },
  {
    "objectID": "learn/rstudio/objects/index.html#create-a-numeric-vector",
    "href": "learn/rstudio/objects/index.html#create-a-numeric-vector",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Create a numeric vector",
    "text": "Create a numeric vector\n\nx &lt;- c(1, 2, 3, 4, 5)\n\nx\n\n[1] 1 2 3 4 5"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#access-elements-of-a-vector",
    "href": "learn/rstudio/objects/index.html#access-elements-of-a-vector",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Access elements of a vector",
    "text": "Access elements of a vector\nReturns the second element of x, which is 2\n\nx[2] \n\n[1] 2"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#perform-arithmetic-operations",
    "href": "learn/rstudio/objects/index.html#perform-arithmetic-operations",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Perform arithmetic operations",
    "text": "Perform arithmetic operations\nAdds 2 to each element of x, resulting in the vector c(3, 4, 5, 6, 7)\n\nx + 2 \n\n[1] 3 4 5 6 7"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#find-the-length-of-a-vector",
    "href": "learn/rstudio/objects/index.html#find-the-length-of-a-vector",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Find the length of a vector:",
    "text": "Find the length of a vector:\n\nlength(x) \n\n[1] 5"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#modify-a-vector",
    "href": "learn/rstudio/objects/index.html#modify-a-vector",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Modify a vector",
    "text": "Modify a vector\nChanges the third element of x to 10\n\nx[3] &lt;- 10\n\nx\n\n[1]  1  2 10  4  5"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#apply-functions-to-a-vector",
    "href": "learn/rstudio/objects/index.html#apply-functions-to-a-vector",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Apply functions to a vector",
    "text": "Apply functions to a vector\nReturns the sum of the elements in x, which is 22\n\nsum(x) \n\n[1] 22\n\n\nReturns the mean (average) of the elements in x, which is 4.4\n\nmean(x)\n\n[1] 4.4\n\n\nReturns the maximum value in x, which is 10\n\nmax(x)\n\n[1] 10\n\n\nReturns the minimum value in x, which is 1\n\nmin(x)\n\n[1] 1\n\n\n \nIn addition to numeric values, you can put a wide variety of other data types in a vector in R. Here are some examples:"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#character-values-1",
    "href": "learn/rstudio/objects/index.html#character-values-1",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Character values",
    "text": "Character values\n\nnames &lt;- c(\"Hertie School\", \"Berlin\", \"Public Policy\")\n\nnames\n\n[1] \"Hertie School\" \"Berlin\"        \"Public Policy\""
  },
  {
    "objectID": "learn/rstudio/objects/index.html#logical-values",
    "href": "learn/rstudio/objects/index.html#logical-values",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Logical values",
    "text": "Logical values\n\nflags &lt;- c(TRUE, FALSE, TRUE)\n\nflags\n\n[1]  TRUE FALSE  TRUE"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#times",
    "href": "learn/rstudio/objects/index.html#times",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Times:",
    "text": "Times:\n\ntimes &lt;- as.POSIXct(c(\"2022-01-01 10:00:00\", \"2022-01-01 11:00:00\", \"2022-01-01 12:00:00\"))\n\ntimes\n\n[1] \"2022-01-01 10:00:00 EET\" \"2022-01-01 11:00:00 EET\"\n[3] \"2022-01-01 12:00:00 EET\""
  },
  {
    "objectID": "learn/rstudio/objects/index.html#a-list-with-different-type-of-vectors",
    "href": "learn/rstudio/objects/index.html#a-list-with-different-type-of-vectors",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "A list with different type of vectors",
    "text": "A list with different type of vectors\n\nmy_list &lt;- list(numbers = c(1, 2, 3), names = c(\"Alejandro\", \"Eduardo\", \"Fernanda\"), statement = c(TRUE, FALSE, TRUE))\n\nmy_list\n\n$numbers\n[1] 1 2 3\n\n$names\n[1] \"Alejandro\" \"Eduardo\"   \"Fernanda\" \n\n$statement\n[1]  TRUE FALSE  TRUE"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#access-an-element-of-the-list-using-indexing",
    "href": "learn/rstudio/objects/index.html#access-an-element-of-the-list-using-indexing",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Access an element of the list using indexing",
    "text": "Access an element of the list using indexing\nWe can access an element of the list using indexing, which is really useful when you are doing functions and storing results or calling them.\nHere this returns the second element of my_list, which is the character vector “names”\n\nmy_list[[2]]\n\n[1] \"Alejandro\" \"Eduardo\"   \"Fernanda\" \n\n\nor also we can access an element of the list using named indexing:\n\nmy_list[[\"names\"]]\n\n[1] \"Alejandro\" \"Eduardo\"   \"Fernanda\""
  },
  {
    "objectID": "learn/rstudio/objects/index.html#add-a-new-element-to-the-list",
    "href": "learn/rstudio/objects/index.html#add-a-new-element-to-the-list",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Add a new element to the list:",
    "text": "Add a new element to the list:\nAdds a new numeric vector “ages” to my_list\n\nmy_list[[\"ages\"]] &lt;- c(25, 30, 35)\n\nWe can do the same even with a dataframe inside a list\n\ndf &lt;- data.frame(name = c(\"Alejandro\", \"Eduardo\", \"Marifer\"), \n                 age = c(30, 27, 17)) # Create the dataframe\n\nmy_list[[\"my_df\"]] &lt;- df\n\nmy_list\n\n$numbers\n[1] 1 2 3\n\n$names\n[1] \"Alejandro\" \"Eduardo\"   \"Fernanda\" \n\n$statement\n[1]  TRUE FALSE  TRUE\n\n$ages\n[1] 25 30 35\n\n$my_df\n       name age\n1 Alejandro  30\n2   Eduardo  27\n3   Marifer  17"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#create-a-nested-list-with-two-elements",
    "href": "learn/rstudio/objects/index.html#create-a-nested-list-with-two-elements",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Create a nested list with two elements:",
    "text": "Create a nested list with two elements:\n\nnested_list &lt;- list(numbers = c(1, 2, 3), list_2 = list(letter = \"A\", number = 42))\n\nnested_list\n\n$numbers\n[1] 1 2 3\n\n$list_2\n$list_2$letter\n[1] \"A\"\n\n$list_2$number\n[1] 42\n\n\nFor access a nested element of the list:\n\nnested_list[[\"list_2\"]][[\"number\"]]  \n\n[1] 42\n\n\nAs you can see, we can access the outputs of the list we want. This is useful since you can apply functions to retrieve your data from a nested list or access to a specific output of your model, for example."
  },
  {
    "objectID": "learn/rstudio/objects/index.html#createing-a-matrix",
    "href": "learn/rstudio/objects/index.html#createing-a-matrix",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Createing a matrix",
    "text": "Createing a matrix\nCreate a matrix with three rows and four columns:\n\nm_example &lt;- matrix(1:12, nrow = 3, ncol = 4)\n\nm_example\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#access-an-element-of-the-matrix-using-indexing",
    "href": "learn/rstudio/objects/index.html#access-an-element-of-the-matrix-using-indexing",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Access an element of the matrix using indexing",
    "text": "Access an element of the matrix using indexing\nReturns the element in the second row and third column of my_matrix, which is 7\n\nm_example[2, 3] \n\n[1] 8"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#modify-an-element-of-the-matrix",
    "href": "learn/rstudio/objects/index.html#modify-an-element-of-the-matrix",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Modify an element of the matrix",
    "text": "Modify an element of the matrix\nChanges the element in the first row and fourth column of my_matrix to 20\n\nm_example[1, 4] &lt;- 20  \n\nm_example\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   20\n[2,]    2    5    8   11\n[3,]    3    6    9   12"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#create-an-array-with-three-dimensions",
    "href": "learn/rstudio/objects/index.html#create-an-array-with-three-dimensions",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Create an array with three dimensions",
    "text": "Create an array with three dimensions\n\narr_example &lt;- array(1:24, dim = c(2, 3, 4))\n\narr_example\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    7    9   11\n[2,]    8   10   12\n\n, , 3\n\n     [,1] [,2] [,3]\n[1,]   13   15   17\n[2,]   14   16   18\n\n, , 4\n\n     [,1] [,2] [,3]\n[1,]   19   21   23\n[2,]   20   22   24"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#access-an-element-of-the-array-using-indexing",
    "href": "learn/rstudio/objects/index.html#access-an-element-of-the-array-using-indexing",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Access an element of the array using indexing",
    "text": "Access an element of the array using indexing\nReturns the element in the second row, third column, and fourth layer of my_array, which is 23\n\narr_example[2, 3, 4]\n\n[1] 24"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#modify-an-element-of-the-array",
    "href": "learn/rstudio/objects/index.html#modify-an-element-of-the-array",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Modify an element of the array",
    "text": "Modify an element of the array\nChanges the element in the second row, second column, and first layer of arr_example to 10\n\narr_example[2, 2, 1] &lt;- 10 \n\narr_example\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2   10    6\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    7    9   11\n[2,]    8   10   12\n\n, , 3\n\n     [,1] [,2] [,3]\n[1,]   13   15   17\n[2,]   14   16   18\n\n, , 4\n\n     [,1] [,2] [,3]\n[1,]   19   21   23\n[2,]   20   22   24"
  },
  {
    "objectID": "learn/rstudio/objects/index.html#create-a-data-frame-multiple-ways",
    "href": "learn/rstudio/objects/index.html#create-a-data-frame-multiple-ways",
    "title": "Understanding R Objects: Naming, Data Structures and Classes in R",
    "section": "Create a Data Frame: multiple ways",
    "text": "Create a Data Frame: multiple ways\n1.- Using data.frame() function: This is the most common way to create a data frame in R. You can put as many vectors (variables) as you want.\n\ndf &lt;- data.frame(x = c(1, 2, 3), \n                 y = c(\"a\", \"b\", \"c\"), \n                 z = c(TRUE, FALSE, TRUE))\n\n2.- Using read_csv2() function: You can also create a data frame by importing data from an external file using the read.table() or read.csv() function.\n\ndf &lt;- read.table(\"data.txt\", header = TRUE)\n\n3.- Using read_excel() function from the readxl package\n\nlibrary(readxl)\ndf &lt;- read_excel(\"data.xlsx\")\n\n4.- Using tibble() function from the tibble package\n\nlibrary(tibble)\ndf &lt;- tibble(x = c(1, 2, 3), y = c(\"a\", \"b\", \"c\"), z = c(TRUE, FALSE, TRUE))\n\nYou can check our other tutorials to handle data frames and start practicing. We also recommend these books from the website for you to go into more detail.\n\n\n  \n    \n      \n  \n  \n    \n      \n  \n\n\nNo matching items"
  },
  {
    "objectID": "learn/i2ds.html",
    "href": "learn/i2ds.html",
    "title": "I2DS Tools for Data Science",
    "section": "",
    "text": "A workshop on tools for data science with R. Run by students of the course Introduction to Data Science (IDS) at the Hertie School, Berlin, Germany. All content produced and prepared by students of the Master of Data Science for Public Policy, the Master of Public Policy, and the Master of International Affairs.\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nI2DS Tools for Data Science Workshop 2021\n\n\nA workshop on tools for data science with R. Run by students of the course Introduction to Data Science (IDS) at the Hertie School, Berlin, Germany.\n\n\n\nI2DS\n\n\nR\n\n\nHertie School\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nI2DS Tools for Data Science Workshop 2022\n\n\nA workshop on tools for data science with R. Run by students of the course Introduction to Data Science (IDS) at the Hertie School, Berlin, Germany.\n\n\n\nI2DS\n\n\nR\n\n\nHertie School\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html",
    "href": "learn/rstudio/social_media_scraping/index.html",
    "title": "Your Document Title",
    "section": "",
    "text": "Your important content or announcement goes here."
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#loading-in-packages-and-authorizing-rtweet",
    "href": "learn/rstudio/social_media_scraping/index.html#loading-in-packages-and-authorizing-rtweet",
    "title": "Introduction to Social Media Scraping",
    "section": "Loading in packages and authorizing rtweet",
    "text": "Loading in packages and authorizing rtweet\nSo the first thing we want to do is load in the packages we’ll be using to scrape and manipulate our data. The most important of those is rtweet, which is the one we’ll be using to interact with the Twitter API.\nIn order to scrape tweets, you’ll need a Twitter developer account and have to make a Twitter app. This is actually a pretty simple process (and won’t require any coding). Here’s a step-by-step guide\n\npacman::p_load(rtweet, tidyverse, ggplot2, utils, tm, SnowballC, caTools, \n               rpart, topicmodels, tidytext, wordcloud, lexicon, reshape2,\n               sentimentr)\n\nRunning the code above (without the #’s) will prompt a dialogue box to pop up on your screen asking you for a bearer token. You can find that on the Twitter developer page. I made the last two lines into comments so that this can be knit into HTML smoothly."
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#corpus",
    "href": "learn/rstudio/social_media_scraping/index.html#corpus",
    "title": "Introduction to Social Media Scraping",
    "section": "Corpus",
    "text": "Corpus\nIn natural language processing (NLP), a corpus is a collection of written or spoken language that is used as a basis for analysis. A corpus can be made up of many different types of texts, including books, articles, speeches, social media posts, and more. Here, we will make a corpus of documents using just the full_text part of green tweets\n\ncorpus1 &lt;- Corpus(VectorSource(green$full_text))\n\nNow we need to clean our text a bit. Change to lower case and remove punctuation!\n\ncorpus1 &lt;- tm_map(corpus1, tolower)\ncorpus1 &lt;- tm_map(corpus1, removePunctuation)\n#We need to remove stop words to get meaningful results from this exercise. \n#We'll remove words like \"me\", \"is\", \"was\"\nstopwords(\"english\")[1:50]\n\n [1] \"i\"          \"me\"         \"my\"         \"myself\"     \"we\"        \n [6] \"our\"        \"ours\"       \"ourselves\"  \"you\"        \"your\"      \n[11] \"yours\"      \"yourself\"   \"yourselves\" \"he\"         \"him\"       \n[16] \"his\"        \"himself\"    \"she\"        \"her\"        \"hers\"      \n[21] \"herself\"    \"it\"         \"its\"        \"itself\"     \"they\"      \n[26] \"them\"       \"their\"      \"theirs\"     \"themselves\" \"what\"      \n[31] \"which\"      \"who\"        \"whom\"       \"this\"       \"that\"      \n[36] \"these\"      \"those\"      \"am\"         \"is\"         \"are\"       \n[41] \"was\"        \"were\"       \"be\"         \"been\"       \"being\"     \n[46] \"have\"       \"has\"        \"had\"        \"having\"     \"do\"        \n\ncorpus1 &lt;- tm_map(corpus1, removeWords, (stopwords(\"english\")))\n#We need to clean the words in the corpus further by \"stemming\" words\n#A word like \"understand\" and \"understands\" will both become \"understand\"\ncorpus1 &lt;- tm_map(corpus1, stemDocument)"
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#document-term-matrix",
    "href": "learn/rstudio/social_media_scraping/index.html#document-term-matrix",
    "title": "Introduction to Social Media Scraping",
    "section": "Document Term Matrix",
    "text": "Document Term Matrix\nSo, a DTM is a way of representing a collection of text documents quantitativelythat allows us to do some cool stuff with them. It’s basically a matrix where the rows correspond to the documents in the collection, and the columns correspond to the unique words or terms that appear in the documents. Each cell in the matrix represents the frequency of a particular term in a particular document.\n\n#creates a document term matrix, which is necessary for building a topic model\nDTM1 &lt;- DocumentTermMatrix(corpus1)\n#Here we can see the most frequently used terms\nfrequent_ge_20 &lt;- findFreqTerms(DTM1, lowfreq = 100)\nfrequent_ge_20\n\n [1] \"amp\"       \"green\"     \"like\"      \"store\"     \"day\"       \"…\"        \n [7] \"’s\"        \"light\"     \"one\"       \"year\"      \"figur\"     \"red\"      \n[13] \"buddha\"    \"fasc1nat\"  \"four\"      \"f…\"        \"philippin\" \"pray\"     \n[19] \"purchas\"   \"spent\"     \"woman\""
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#lets-create-the-topic-model-well-start-with-5-topics",
    "href": "learn/rstudio/social_media_scraping/index.html#lets-create-the-topic-model-well-start-with-5-topics",
    "title": "Introduction to Social Media Scraping",
    "section": "Let’s create the topic model! We’ll start with 5 topics",
    "text": "Let’s create the topic model! We’ll start with 5 topics\nThe code snippet performs topic modeling on a corpus of text data represented as a Document-Term Matrix (DTM) using the Latent Dirichlet Allocation (LDA) algorithm. The LDA() function from the topic models package is used to create a model with 7 topics and a specified random seed for reproducibility. The resulting model is stored in the green_lda1 object.\n\n#Perform LDA topic modeling on a Document-Term Matrix (DTM) with 7 topics\ngreen_lda1 &lt;- LDA(DTM1, k = 7, control = list(seed = 1234))\n\n#Print the model summary\ngreen_lda1\n\nA LDA_VEM topic model with 7 topics.\n\n#Convert the model's beta matrix to a tidy format\ngreen_topics1 &lt;- tidy(green_lda1, matrix = \"beta\")\n\ngreen_top_terms1 &lt;- green_topics1 %&gt;%\n  group_by(topic) %&gt;% #Group the terms by topic\n  slice_max(beta, n = 10) %&gt;% #Top 10 terms with the highest probabilities\n  ungroup() %&gt;% #Remove the grouping attribute from the data frame\n  arrange(topic, -beta) #Sort the data frame by topic index and term probability"
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#word-cloud-of-biden-tweets",
    "href": "learn/rstudio/social_media_scraping/index.html#word-cloud-of-biden-tweets",
    "title": "Introduction to Social Media Scraping",
    "section": "Word Cloud of Biden Tweets",
    "text": "Word Cloud of Biden Tweets\n\nCode# Create custom color palette\nmy_palette &lt;- brewer.pal(8, \"Dark2\")\n\n# Create word cloud with larger font size and custom layout\nwordcloud(words_data2$word, \n          words_data2$n, \n          max.words = 200, \n          colors = my_palette, \n          scale = c(5, 0.3),\n          random.order = FALSE,\n          rot.per = 0.25,\n          random.color = TRUE,\n          main = \"Word Cloud of Biden Tweets\")"
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#comparison-cloud-of-biden-tweets-by-sentiment",
    "href": "learn/rstudio/social_media_scraping/index.html#comparison-cloud-of-biden-tweets-by-sentiment",
    "title": "Introduction to Social Media Scraping",
    "section": "Comparison Cloud of Biden Tweets by Sentiment",
    "text": "Comparison Cloud of Biden Tweets by Sentiment\nNow let’s make a word cloud from those tweets but highlight which words are positive and which are negative\n\n#Select and tokenize words\nwords_data &lt;- biden_tweets %&gt;% \n  select(text) %&gt;%\n  unnest_tokens(word, text) \n\n#Get sentiment scores for each word using the bing lexicon\nsentiment_scores &lt;- words_data2 %&gt;%\n  inner_join(get_sentiments(\"bing\"))\n\n#Count the number of words in each sentiment category\nsentiment_counts &lt;- sentiment_scores %&gt;%\n  count(sentiment, sort = TRUE)\n\n#Create a list of profanity words to remove from the dataset\nprofanity_list &lt;- unique(tolower(lexicon::profanity_alvarez))\n\n#Filter out stop words and profanity words from the dataset\nfiltered_words_data &lt;- words_data %&gt;%\n  filter(!word %in% c('https', 't.co', 'he\\'s', 'i\\'m', 'it\\'s', profanity_list))\n\n#Get sentiment scores for each filtered word using the bing lexicon\nfiltered_sentiment_scores &lt;- filtered_words_data %&gt;%\n  inner_join(get_sentiments(\"bing\"))"
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#cloud",
    "href": "learn/rstudio/social_media_scraping/index.html#cloud",
    "title": "Introduction to Social Media Scraping",
    "section": "Cloud",
    "text": "Cloud\n\nCode#Count the number of filtered words with each sentiment score\nword_sentiment_counts &lt;- filtered_sentiment_scores %&gt;%\n  count(word, sentiment, sort = TRUE) %&gt;%\n  acast(word ~ sentiment, value.var = \"n\", fill = 0)\n\n#Create a comparison cloud using the word and sentiment counts\ncomparison.cloud(word_sentiment_counts, \n                  colors = c(\"red\", \"blue\"),\n                  max.words = Inf)"
  },
  {
    "objectID": "learn/I2DS/i2ds2022/index.html",
    "href": "learn/I2DS/i2ds2022/index.html",
    "title": "I2DS Tools for Data Science Workshop 2022",
    "section": "",
    "text": "The Introduction to Data Science (IDS) course at the Hertie School in Berlin, Germany, is designed to provide students with a comprehensive understanding of data science principles, techniques, and tools. As part of the course curriculum, students actively engage in organizing workshops and activities to enhance their practical skills and share their knowledge with others.\n \nThese student-led activities, such as the workshop on Tools for Data Science with R, serve as valuable opportunities for participants to gain hands-on experience and learn directly from their peers. The I2DS course encourages students to take the lead in organizing and delivering these workshops, fostering a collaborative learning environment.\n\n\n\n Go to I2DS Tools 2022"
  },
  {
    "objectID": "learn/rstudio.html",
    "href": "learn/rstudio.html",
    "title": "Learn R",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\nLearn the basic tools for scraping Twitter Data in R\n\n\n\n\nTwitter\n\n\nWebscraping\n\n\nText\n\n\n \n\n\n\n\nApr 18, 2023\n\n\nLukas Lehmann\n\n\n12 min\n\n\n\n\n\n\n  \n\n\n\n\n\nThis is why R is so powerful: all kind of objects and possibilites. Naming objects, understand structures is crucial to learn\n\n\n\n\nRstudio\n\n\nObjects\n\n\n \n\n\n\n\nApr 16, 2023\n\n\nJorge Roa\n\n\n18 min\n\n\n\n\n\n\n  \n\n\n\n\n\nSubtitle or Brief Description\n\n\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n \n\n\n\n\nInvalid Date\n\n\nYour Name\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\n\nIf you use Stata for your analysis, but you are curious or want to switch to the R world, this is your guide for it.\n\n\n\n\nR\n\n\nStata\n\n\nTransition\n\n\n \n\n\n\n\nApr 23, 2023\n\n\nJorge Roa\n\n\n12 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "learn/rstudio.html#learn-r",
    "href": "learn/rstudio.html#learn-r",
    "title": "Learn R",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\nLearn the basic tools for scraping Twitter Data in R\n\n\n\n\nTwitter\n\n\nWebscraping\n\n\nText\n\n\n \n\n\n\n\nApr 18, 2023\n\n\nLukas Lehmann\n\n\n12 min\n\n\n\n\n\n\n  \n\n\n\n\n\nThis is why R is so powerful: all kind of objects and possibilites. Naming objects, understand structures is crucial to learn\n\n\n\n\nRstudio\n\n\nObjects\n\n\n \n\n\n\n\nApr 16, 2023\n\n\nJorge Roa\n\n\n18 min\n\n\n\n\n\n\n  \n\n\n\n\n\nSubtitle or Brief Description\n\n\n\n\nCategory1\n\n\nCategory2\n\n\nCategory3\n\n\n \n\n\n\n\nInvalid Date\n\n\nYour Name\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\n\nIf you use Stata for your analysis, but you are curious or want to switch to the R world, this is your guide for it.\n\n\n\n\nR\n\n\nStata\n\n\nTransition\n\n\n \n\n\n\n\nApr 23, 2023\n\n\nJorge Roa\n\n\n12 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#important-section-title",
    "href": "learn/rstudio/social_media_scraping/index.html#important-section-title",
    "title": "Your Document Title",
    "section": "",
    "text": "Your important content or announcement goes here."
  },
  {
    "objectID": "learn/rstudio/social_media_scraping/index.html#subsection-title",
    "href": "learn/rstudio/social_media_scraping/index.html#subsection-title",
    "title": "Your Document Title",
    "section": "Subsection Title",
    "text": "Subsection Title\nDetails about the subsection. This can include code snippets, explanations, or any relevant information.\n\n# R code goes here\n\n# Example\n\nx &lt;- 1:10\n\ny &lt;- x^2\n\nplot(x, y)"
  }
]